image: node:latest

variables:
  AWS_ACCESS_KEY: $AWS_ACCESS_KEY
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  ECR_REGISTRY: $ECR_REGISTRY

stages:
  - build
  - test
  - publish

build:
  stage: build
  script:
    - npm install
    - npm run build
  cache:
    paths:
      - node_modules/
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - node_modules/
      - dist/

test:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  dependencies:
    - build
  script:
    - npm run test:cover
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

publish:
  stage: .post
  image:
    name: docker:latest
  services:
    - docker:19-dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY
    - aws --version
    - docker info
    - docker --version
  script:
    - docker build -t $ECR_REGISTRY:$CI_PIPELINE_IID .
    - docker push $ECR_REGISTRY:$CI_PIPELINE_IID
